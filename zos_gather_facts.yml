---
- name: Gather and format z/OS-specific facts
  hosts: zos_host
  gather_facts: false
  environment: "{{ environment_vars | default({}) }}"

  vars:
    # Define the desired structure mapping here
    zos_facts_structure:
      System_Info:
        Product: "{{ ansible_facts.product_name | default('N/A') }}"
        Version: "{{ ansible_facts.product_version | default('N/A') }}.{{ ansible_facts.product_release | default('N/A') }}.{{ ansible_facts.product_mod_level | default('N/A') }}"
        System_Name: "{{ ansible_facts.sys_name | default('N/A') }}"
        Sysplex_Name: "{{ ansible_facts.sysplex_name | default('N/A') }}"
        SMF_Name: "{{ ansible_facts.smf_name | default('N/A') }}"
        Primary_JES: "{{ ansible_facts.primary_jes | default('N/A') }}"
      Hardware_Info:
        Manufacturer: "{{ ansible_facts.cpc_nd_manufacturer | default('N/A') }}"
        Type_Model: "{{ ansible_facts.cpc_nd_type | default('N/A') }}-{{ ansible_facts.cpc_nd_model | default('N/A') }}"
        Plant: "{{ ansible_facts.cpc_nd_plant | default('N/A') }}"
        Sequence_Number: "{{ ansible_facts.cpc_nd_seqno | default('N/A') }}"
        LPAR_Name: "{{ ansible_facts.lpar_name | default('(Not available or N/A)') }}"
      IPL_Info:
        IPL_Volume: "{{ ansible_facts.ipl_volume | default('N/A') }}"
        Load_Param_DSN: "{{ ansible_facts.load_param_dsn | default('N/A') }}"
        Load_Param_Device: "{{ ansible_facts.load_param_device_num | default('N/A') }}"
        IEASYM_Suffixes: "{{ ansible_facts.ieasym_card | default('N/A') }}"
        Nucleus_ID: "{{ ansible_facts.nucleus_id | default('N/A') }}"
      IODF_Info:
        IODF_Name: "{{ ansible_facts.iodf_name | default('N/A') }}"
        IODF_Config: "{{ ansible_facts.iodf_config | default('N/A') }}"
        EDT_ID: "{{ ansible_facts.edt | default('N/A') }}"
        IO_Config_ID: "{{ ansible_facts.io_config_id | default('N/A') }}"
      Catalog_Info:
        Master_Catalog_DSN: "{{ ansible_facts.master_catalog_dsn | default('N/A') }}"
        Master_Catalog_VOLSER: "{{ ansible_facts.master_catalog_volser | default('N/A') }}"
      PARMLIB_Info:
        PARMLIB_DSN: "{{ ansible_facts.parmlib_dsn | default('N/A') }}"
        PARMLIB_VOLSER: "{{ ansible_facts.parmlib_volser | default('N/A') }}"

  tasks:
    - name: Gather all facts about z/OS host
      ibm.ibm_zos_core.zos_gather_facts:
      register: zos_facts_raw
      # Add tags to potentially control execution later
      tags: [always] 

    - name: Check if z/OS facts were gathered
      ansible.builtin.fail:
        msg: "Failed to gather z/OS facts. 'ansible_facts' key missing or empty in registered variable zos_facts_raw."
      when: zos_facts_raw.ansible_facts is not defined or not zos_facts_raw.ansible_facts
      tags: [always]

    - name: Create structured facts variable
      ansible.builtin.set_fact:
        formatted_zos_facts: "{{ zos_facts_structure }}"
      tags: [always]

    # THIS IS THE KEY TASK FOR CLEAN OUTPUT
    - name: Display formatted z/OS facts as clean YAML
      ansible.builtin.debug:
        msg: "{{ formatted_zos_facts | to_nice_yaml }}"
      # Add a specific tag for use with specific callbacks (see below)
      tags: [print_action]

      